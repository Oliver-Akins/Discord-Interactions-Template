/** The message object that Discord stores in it's system */
interface Message {
	id: Snowflake;
	channel_id: Snowflake;
	guild_id?: Snowflake;

	/**
	 * The author object follows the structure of the user object, but is only
	 * a valid user in the case where the message is generated by a user or bot
	 * user. If the message is generated by a webhook, the author object
	 * corresponds to the webhook's id, username, and avatar. You can tell if a
	 * message is generated by a webhook by checking for the webhook_id on the
	 * message object.
	 */
	author: any;

	member?: any;

	content: string;

	/** The ISO8601 timestamp of when the message was sent. */
	timestamp: string;

	/** The ISO8601 timestamp of when the message was last edited. */
	edited_timestamp?: string;

	tts: boolean;

	mention_everyone: boolean;

	mentions: unknown;

	mention_roles: Snowflake[];

	mention_channels?: unknown[];

	attachments: unknown[];

	embeds: Embed[];

	reactions?: unknown[];

	/** Used for validating a message was sent */
	nonce?: number | string;

	pinned: boolean;

	webhook_id?: Snowflake;

	type: unknown;

	/** Sent with Rich Presence-related chat embeds */
	activity?: unknown;
	/** Sent with Rich Presence-related chat embeds */
	application?: unknown;

	/**
	 * If the message is a response to an Interaction, this is the id of the
	 * interaction's application.
	 */
	application_id?: Snowflake;

	/**
	 * Data showing the source of a crosspost, channel follow add, pin, or
	 * reply message
	 */
	message_reference?: unknown;
	/** The message associated with the message_reference */
	referenced_message?: unknown;

	/** The message flags combined as a bitfield */
	flags?: number;

	/** Sent if the message is a response to a non-component Interaction event */
	interaction?: unknown;

	/**
	 * The thread that was started from this message, includes the thread
	 * member object
	 */
	thread?: unknown;

	/**
	 * Sent if the message contains components like buttons, action rows, or
	 * other interactive components.
	 */
	components?: unknown[];

	/** Sent if the message contains stickers. */
	sticker_items?: unknown[];

	/**
	 * ! DEPRECATED
	 * The stickers sent with the message
	 */
	stickers?: unknown[];
}